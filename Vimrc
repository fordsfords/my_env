syntax off
set dir=~/swp
" Q: execute macro named "q".
noremap Q @q
" gg: jump to file start, g?: rot13, G: move to end, '': restore cursor
noremap <C-I> ggg?G''
set enc=utf-8
set nohlsearch  " disable highlight search
set formatoptions-=cro  " stop doing me favors with comments
set t_Co=0 " zero colors
set tabstop=4
set noautoindent
autocmd FileType python setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4 autoindent
autocmd FileType sh setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2 autoindent
autocmd FileType c setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4 autoindent
autocmd FileType cpp setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4 autoindent

function TabsOrSpaces()
    " Modified from https://unix.stackexchange.com/a/63197
    " If any lines in the buffer start with a tab, turn off "expandtab".
    let numTabs=len(filter(getbufline(bufname("%"), 1, 250), 'v:val =~ "^\\t"'))

    if numTabs > 0
        setlocal noexpandtab
    endif
endfunction

function! RunBuildScript(script_name)
    " Anthropic's claude.ai wrote this function.
    " Save the current buffer
    update

    " Close out other screen splits.
    only
    redraw

    " Get the current buffer number and file path
    let l:current_bufnr = bufnr('%')
    let l:current_file = expand('%:p')

    " Run the specified build script and capture its output
    let l:output = system(a:script_name)

    " Open a new split window and put the script output there
    new
    setlocal buftype=nofile bufhidden=hide noswapfile
    call setline(1, split(l:output, '\n'))

    " Check if the original file has been modified
    checktime

    " If the file has changed, prompt for reload
    if getbufvar(l:current_bufnr, '&modified')
        let l:choice = confirm("The file has been modified. Reload?", "&Yes\n&No", 1)
        if l:choice == 1
            execute 'buffer ' . l:current_bufnr
            edit!
        endif
    endif
endfunction

" Define commands for specific scripts
command! Bld call RunBuildScript('./bld.sh')
command! Tst call RunBuildScript('./tst.sh')
autocmd BufReadPost * call TabsOrSpaces()
